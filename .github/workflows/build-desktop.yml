name: Build and Release GestoTeam Desktop

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 0.0.1)'
        required: true
        default: '0.0.1'

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: |
            gestoteam-frontend/node_modules
            gestoteam-desktop/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Build Backend
        run: |
          cd gestoteam-backend
          ./gradlew build --no-daemon
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: Build Frontend
        run: |
          cd gestoteam-frontend
          npm ci
          npm run build

      - name: Setup Desktop Build
        run: |
          cd gestoteam-desktop
          npm ci

      - name: Build Desktop Professional
        run: |
          cd gestoteam-desktop
          npm run build:professional
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Build Output
        run: |
          cd gestoteam-desktop
          if (Test-Path "dist-electron\GestoTeam-Setup-*.exe") {
            Write-Host "‚úÖ Instalador NSIS encontrado"
            Get-ChildItem "dist-electron\GestoTeam-Setup-*.exe" | ForEach-Object {
              $size = [math]::Round($_.Length / 1MB, 2)
              Write-Host "   üì¶ $($_.Name) ($size MB)"
            }
          } else {
            Write-Host "‚ö†Ô∏è  Instalador NSIS no encontrado, verificando aplicaci√≥n portable..."
            if (Test-Path "dist-electron\GestoTeam-win32-x64\GestoTeam.exe") {
              Write-Host "‚úÖ Aplicaci√≥n portable encontrada"
            } else {
              Write-Host "‚ùå No se encontr√≥ ning√∫n archivo de salida"
              exit 1
            }
          }

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            gestoteam-desktop/dist-electron/*.exe
            gestoteam-desktop/dist-electron/*.zip
            gestoteam-desktop/dist-electron/build-report.json
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gestoteam-desktop-build
          path: |
            gestoteam-desktop/dist-electron/
          retention-days: 30

      - name: Build Summary
        run: |
          echo "üéâ Build completado exitosamente!"
          echo "üìÅ Archivos generados:"
          cd gestoteam-desktop/dist-electron
          Get-ChildItem -Recurse | ForEach-Object {
            if ($_.PSIsContainer) {
              echo "   üìÅ $($_.Name)/"
            } else {
              $size = [math]::Round($_.Length / 1KB, 2)
              echo "   üìÑ $($_.Name) ($size KB)"
            }
          }
