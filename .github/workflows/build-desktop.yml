name: Build GestoTeam Desktop

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Versión a construir (ej: 0.0.1)'
        required: true
        default: '0.0.1'

jobs:
  build-desktop:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: gestoteam-desktop/package-lock.json
        
    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('gestoteam-backend/gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build Backend
      working-directory: gestoteam-backend
      run: |
        echo "🔧 Compilando backend..."
        ./gradlew clean build -x test
        echo "✅ Backend compilado"
        
    - name: Build Frontend
      working-directory: gestoteam-frontend
      run: |
        echo "🌐 Instalando dependencias del frontend..."
        npm ci
        echo "🏗️ Compilando frontend..."
        npm run build
        echo "✅ Frontend compilado"
        
    - name: Build Desktop
      working-directory: gestoteam-desktop
      run: |
        echo "📦 Instalando dependencias del desktop..."
        npm ci
        echo "🚀 Iniciando build completo..."
        npm run build
        echo "✅ Build completado"
        
    - name: Create Release Assets
      working-directory: gestoteam-desktop
      run: |
        echo "📋 Preparando assets para release..."
        
        # Crear directorio de release
        mkdir -p release-assets
        
        # Copiar instalador si existe
        if (Test-Path "dist-electron\GestoTeam Desktop Setup *.exe") {
          Copy-Item "dist-electron\GestoTeam Desktop Setup *.exe" "release-assets\"
          echo "✅ Instalador copiado"
        }
        
        # Copiar aplicación compilada
        if (Test-Path "app") {
          Compress-Archive -Path "app" -DestinationPath "release-assets\gestoteam-desktop-app.zip"
          echo "✅ Aplicación comprimida"
        }
        
        # Copiar script NSIS si existe
        if (Test-Path "dist-electron\installer.nsi") {
          Copy-Item "dist-electron\installer.nsi" "release-assets\"
          echo "✅ Script NSIS copiado"
        }
        
        echo "📦 Assets preparados en release-assets/"
        
    - name: Upload Release Assets
      uses: actions/upload-artifact@v4
      with:
        name: desktop-release-assets
        path: gestoteam-desktop/release-assets/
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: gestoteam-desktop/release-assets/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Show Build Summary
      run: |
        echo "🎉 Build completado exitosamente!"
        echo "📦 Versión: ${{ github.ref_name }}"
        echo "🔧 Backend: Compilado y empaquetado"
        echo "🌐 Frontend: Compilado y empaquetado"
        echo "💻 Desktop: Aplicación y instalador creados"
        echo "📋 Assets disponibles en: gestoteam-desktop/release-assets/"
