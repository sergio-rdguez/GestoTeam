const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîç Diagn√≥stico de NSIS para GestoTeam Desktop');
console.log('=============================================\n');

// Funci√≥n para ejecutar comandos de forma segura
function runCommand(command, description) {
  try {
    const result = execSync(command, { stdio: 'pipe', encoding: 'utf8' });
    return { success: true, output: result.trim() };
  } catch (error) {
    return { success: false, error: error.message };
  }
}

// Funci√≥n para verificar paths espec√≠ficos
function checkSpecificPaths() {
  console.log('üìÅ Verificando ubicaciones de instalaci√≥n...');
  
  const possiblePaths = [
    'C:\\Program Files (x86)\\NSIS\\makensis.exe',
    'C:\\Program Files\\NSIS\\makensis.exe',
    'C:\\NSIS\\makensis.exe'
  ];
  
  let foundPaths = [];
  
  possiblePaths.forEach(nsisPath => {
    try {
      if (fs.existsSync(nsisPath)) {
        foundPaths.push(nsisPath);
        console.log(`‚úÖ ${nsisPath}`);
      } else {
        console.log(`‚ùå ${nsisPath}`);
      }
    } catch (error) {
      console.log(`‚ùå ${nsisPath} (error: ${error.message})`);
    }
  });
  
  return foundPaths;
}

// Funci√≥n para verificar PATH del sistema
function checkSystemPATH() {
  console.log('\nüîç Verificando PATH del sistema...');
  
  // Verificar con 'where'
  const whereResult = runCommand('where makensis.exe', 'B√∫squeda con where');
  if (whereResult.success) {
    console.log('‚úÖ makensis.exe encontrado en PATH:');
    whereResult.output.split('\n').forEach(path => {
      console.log(`   ${path}`);
    });
    return true;
  } else {
    console.log('‚ùå makensis.exe no encontrado en PATH');
    return false;
  }
}

// Funci√≥n para verificar versi√≥n de NSIS
function checkNSISVersion() {
  console.log('\nüîç Verificando versi√≥n de NSIS...');
  
  const versionResult = runCommand('makensis.exe /VERSION', 'Verificaci√≥n de versi√≥n');
  if (versionResult.success) {
    console.log(`‚úÖ NSIS disponible: ${versionResult.output}`);
    return true;
  } else {
    console.log('‚ùå No se pudo verificar la versi√≥n de NSIS');
    console.log(`   Error: ${versionResult.error}`);
    return false;
  }
}

// Funci√≥n para verificar permisos
function checkPermissions() {
  console.log('\nüîê Verificando permisos...');
  
  const testPaths = [
    'C:\\Program Files (x86)\\NSIS\\',
    'C:\\Program Files\\NSIS\\'
  ];
  
  testPaths.forEach(testPath => {
    try {
      if (fs.existsSync(testPath)) {
        // Intentar leer el directorio
        fs.readdirSync(testPath);
        console.log(`‚úÖ ${testPath} - Acceso de lectura OK`);
      }
    } catch (error) {
      console.log(`‚ùå ${testPath} - Error de acceso: ${error.message}`);
    }
  });
}

// Funci√≥n para mostrar recomendaciones
function showRecommendations(hasNSIS) {
  console.log('\nüí° RECOMENDACIONES');
  console.log('==================');
  
  if (hasNSIS) {
    console.log('‚úÖ NSIS est√° disponible en el sistema');
    console.log('üöÄ Puedes ejecutar: npm run compile-installer');
  } else {
    console.log('‚ùå NSIS no est√° disponible');
    console.log('');
    console.log('üîß Para instalar NSIS:');
    console.log('   1. Descarga desde: https://nsis.sourceforge.io/Download');
    console.log('   2. Ejecuta el instalador como administrador');
    console.log('   3. Reinicia el sistema');
    console.log('   4. Ejecuta este script nuevamente');
    console.log('');
    console.log('üí° Alternativas:');
    console.log('   ‚Ä¢ Usar solo: npm run build (crea script NSIS)');
    console.log('   ‚Ä¢ Instalar NSIS en una ubicaci√≥n personalizada');
    console.log('   ‚Ä¢ Agregar NSIS al PATH del sistema');
  }
}

// Funci√≥n principal
function main() {
  try {
    // Verificar paths espec√≠ficos
    const foundPaths = checkSpecificPaths();
    
    // Verificar PATH del sistema
    const inPATH = checkSystemPATH();
    
    // Verificar versi√≥n
    const hasVersion = checkNSISVersion();
    
    // Verificar permisos
    checkPermissions();
    
    // Resumen
    console.log('\nüìä RESUMEN DEL DIAGN√ìSTICO');
    console.log('============================');
    console.log(`üìÅ NSIS instalado: ${foundPaths.length > 0 ? '‚úÖ S√≠' : '‚ùå No'}`);
    console.log(`üîç En PATH: ${inPATH ? '‚úÖ S√≠' : '‚ùå No'}`);
    console.log(`üìã Versi√≥n disponible: ${hasVersion ? '‚úÖ S√≠' : '‚ùå No'}`);
    
    if (foundPaths.length > 0) {
      console.log(`üìç Ubicaciones encontradas: ${foundPaths.length}`);
      foundPaths.forEach(path => {
        console.log(`   ‚Ä¢ ${path}`);
      });
    }
    
    // Mostrar recomendaciones
    const hasNSIS = foundPaths.length > 0 || inPATH || hasVersion;
    showRecommendations(hasNSIS);
    
    // Estado final
    if (hasNSIS) {
      console.log('\nüéâ NSIS est√° listo para usar con GestoTeam Desktop!');
    } else {
      console.log('\n‚ö†Ô∏è NSIS no est√° disponible. Instala NSIS para crear instaladores.');
    }
    
  } catch (error) {
    console.error('\n‚ùå Error durante el diagn√≥stico:', error.message);
    process.exit(1);
  }
}

// Ejecutar si se llama directamente
if (require.main === module) {
  main();
}

module.exports = { main };
