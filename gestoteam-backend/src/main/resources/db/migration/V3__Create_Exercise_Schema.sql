-- =====================================================
-- MIGRACIÓN V3: Esquema de Ejercicios y Diagramas Tácticos (One-to-One)
-- Compatible con PostgreSQL y H2
-- =====================================================

-- 1. CREAR TABLA PARA DIAGRAMAS TÁCTICOS (PRIMERO)
CREATE TABLE tactical_diagrams (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    filename VARCHAR(255) NOT NULL,
    file_path VARCHAR(500) NOT NULL,
    title VARCHAR(255) NOT NULL,
    descripcion VARCHAR(1000), -- Cambiado de TEXT a VARCHAR para compatibilidad H2
    created_by BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE CASCADE
);

-- 2. CREAR TABLA DE EJERCICIOS (DESPUÉS)
CREATE TABLE exercises (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    tactical_objectives VARCHAR(255),
    technical_objectives VARCHAR(255),
    physical_objectives VARCHAR(255),
    materials VARCHAR(255),
    category VARCHAR(50) NOT NULL,
    user_id BIGINT NOT NULL,
    tactical_diagram_id BIGINT UNIQUE, -- RELACIÓN ONE-TO-ONE CON DIAGRAMAS TÁCTICOS
    deleted BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (tactical_diagram_id) REFERENCES tactical_diagrams(id) ON DELETE SET NULL
);

-- 3. CREAR TABLA DE UNIÓN ENTRE ENTRENAMIENTOS Y EJERCICIOS
CREATE TABLE training_exercise (
    training_id BIGINT NOT NULL,
    exercise_id BIGINT NOT NULL,
    PRIMARY KEY (training_id, exercise_id),
    FOREIGN KEY (training_id) REFERENCES training(id) ON DELETE CASCADE,
    FOREIGN KEY (exercise_id) REFERENCES exercises(id) ON DELETE CASCADE
);

-- 4. AÑADIR CAMPOS FALTANTES A LA TABLA TRAINING
-- Usar sintaxis estándar SQL compatible con ambos motores
ALTER TABLE training ADD COLUMN user_id BIGINT;
ALTER TABLE training ADD COLUMN deleted BOOLEAN DEFAULT FALSE;
ALTER TABLE training ADD COLUMN created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE training ADD COLUMN updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

-- 5. AÑADIR FOREIGN KEY PARA USER_ID EN TRAINING
ALTER TABLE training ADD CONSTRAINT fk_training_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE;

-- 6. CREAR ÍNDICES PARA MEJORAR RENDIMIENTO
-- Índices para exercises
CREATE INDEX idx_exercises_user_id ON exercises(user_id);
CREATE INDEX idx_exercises_category ON exercises(category);
CREATE INDEX idx_exercises_deleted ON exercises(deleted);
CREATE INDEX idx_exercises_title ON exercises(title);
CREATE INDEX idx_exercises_tactical_diagram ON exercises(tactical_diagram_id);

-- Índices para tactical_diagrams
CREATE INDEX idx_tactical_diagrams_created_by ON tactical_diagrams(created_by);
CREATE INDEX idx_tactical_diagrams_deleted ON tactical_diagrams(deleted);
CREATE INDEX idx_tactical_diagrams_title ON tactical_diagrams(title);

-- Índices para training
CREATE INDEX idx_training_user_id ON training(user_id);
CREATE INDEX idx_training_deleted ON training(deleted);
CREATE INDEX idx_training_exercise_training_id ON training_exercise(training_id);
CREATE INDEX idx_training_exercise_exercise_id ON training_exercise(exercise_id);

-- 7. AÑADIR FUNCIONALIDAD DE ASISTENCIA A ENTRENAMIENTOS

-- Añadir campo de observaciones a la tabla training
ALTER TABLE training ADD COLUMN observations VARCHAR(1000);

-- Añadir campo team_id a la tabla training
ALTER TABLE training ADD COLUMN team_id BIGINT NOT NULL DEFAULT 1;

-- Crear tabla de asistencia a entrenamientos
CREATE TABLE training_attendance (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    training_id BIGINT NOT NULL,
    player_id BIGINT NOT NULL,
    status VARCHAR(50) NOT NULL,
    notes VARCHAR(1000),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    deleted BOOLEAN DEFAULT FALSE,
    
    FOREIGN KEY (training_id) REFERENCES training(id) ON DELETE CASCADE,
    FOREIGN KEY (player_id) REFERENCES player(id) ON DELETE CASCADE
);

-- Crear índices para mejorar el rendimiento
CREATE INDEX idx_training_attendance_training_id ON training_attendance(training_id);
CREATE INDEX idx_training_attendance_player_id ON training_attendance(player_id);
CREATE INDEX idx_training_attendance_status ON training_attendance(status);

-- Crear índice para el campo team_id en training
CREATE INDEX idx_training_team_id ON training(team_id);

-- Añadir restricción única para evitar duplicados de asistencia
ALTER TABLE training_attendance ADD CONSTRAINT uk_training_player UNIQUE (training_id, player_id);

-- 8. VERIFICAR LA MIGRACIÓN
-- Migración V3 completada exitosamente
-- Tabla tactical_diagrams creada PRIMERO para evitar errores de foreign key
-- Tabla exercises creada con estructura optimizada y relación ONE-TO-ONE con diagramas
-- RELACIÓN ONE-TO-ONE: un ejercicio tiene exactamente un diagrama táctico
-- Tabla training_exercise creada para entrenamientos
-- Tabla training_attendance creada para control de asistencia
-- Campos adicionales añadidos a training (observations, team_id)
-- Índices creados para optimizar rendimiento
-- COMPATIBLE CON: PostgreSQL y H2
